##isScripts

##ClickButton
extends TextureButton
		
func _process(delta):
    self.focus_mode = 0

func _pressed():
	if get_tree().get_root().get_node('MainNode').inAutoMode == true or get_tree().get_root().get_node('MainNode').inSkipMode == true:
		if get_tree().get_root().get_node('MainNode').inAutoMode == true:
			get_tree().get_root().get_node('MainNode').inAutoMode = false
		else:
			get_tree().get_root().get_node('MainNode').inSkipMode = false
	else:
		if get_tree().get_root().get_node('MainNode').cancelDialogueAnimation == false:
			get_tree().get_root().get_node('MainNode').cancelDialogueAnimation = true
		else:
			get_tree().get_root().get_node('MainNode').setSignal = true


##StartButton
extends TextureButton

func _pressed():
	get_tree().get_root().get_node('MainNode/MainGame/DialogueLayer/DialogueNode/DialogueBox').show()
	return get_tree().get_root().get_node('MainNode').mainParserLoop('*start')


##ConfigButton
extends TextureButton

func _process(delta):
    self.focus_mode = 0

func _pressed():
	return get_tree().get_root().get_node('MainNode').menuParser('@@ConfigMenu')


##ExitButton
extends TextureButton

func _pressed():
	return get_tree().quit()


##ExitMenuButton
extends TextureButton

func _pressed():
	get_tree().get_root().get_node('MainNode/MainGame/OptionsLayer/MenuImage').hide()
	get_tree().get_root().get_node('MainNode/MainGame/DialogueLayer').show()
	get_tree().get_root().get_node('MainNode').inMenu = false
	print(get_tree().get_root().get_node('MainNode').saveOptions['jump'])
	if get_tree().get_root().get_node('MainNode').saveOptions['jump'] == '*splashscreen':
		get_tree().get_root().get_node('MainNode/MainGame/DialogueLayer/DialogueNode/DialogueBox').hide()
		return get_tree().get_root().get_node('MainNode').menuParser('@@MainMenu')
	else:
		return get_tree().get_root().get_node('MainNode').menuParser('@@InGameMenu')


##AutoButton
extends TextureButton

func _process(delta):
    self.focus_mode = 0

func _pressed():
	# if skip mode is enabled, disable it when going into auto mode
	if get_tree().get_root().get_node('MainNode').inSkipMode == true:
		get_tree().get_root().get_node('MainNode').inSkipMode = false
	# set auto mode on or off
	if get_tree().get_root().get_node('MainNode').inAutoMode == true:
		get_tree().get_root().get_node('MainNode').inAutoMode = false
	else:
		get_tree().get_root().get_node('MainNode').inAutoMode = true
		get_tree().get_root().get_node('MainNode').setSignal = true

		
##SkipButton
extends TextureButton

func _process(delta):
    self.focus_mode = 0

func _pressed():
	# if auto mode is enabled, disable it when going into skip mode
	if get_tree().get_root().get_node('MainNode').inAutoMode == true:
		get_tree().get_root().get_node('MainNode').inAutoMode = false
	# set skip mode on or off
	if get_tree().get_root().get_node('MainNode').inSkipMode == true:
		get_tree().get_root().get_node('MainNode').inSkipMode = false
	else:
		get_tree().get_root().get_node('MainNode').inSkipMode = true
		get_tree().get_root().get_node('MainNode').setSignal = true

		
##ToggleWindowedButton
extends TextureButton

func _process(delta):
	if !OS.window_fullscreen:
		self.disabled = true
	else:
		self.disabled = false

func _pressed():
	OS.window_fullscreen = false
	get_tree().get_root().get_node('MainNode').configSave['fullscreen'] = false
	return get_tree().get_root().get_node('MainNode').saveGame('cf')


##ToggleFullscreenButton
extends TextureButton

func _process(delta):
	if OS.window_fullscreen:
		self.disabled = true
	else:
		self.disabled = false

func _pressed():
	OS.window_fullscreen = true
	get_tree().get_root().get_node('MainNode').configSave['fullscreen'] = true
	return get_tree().get_root().get_node('MainNode').saveGame('cf')


##ToggleLanguageButton_en
extends TextureButton

func _process(delta):
	if get_tree().get_root().get_node('MainNode').configSave['language'] == 'en':
		self.disabled = true
	else:
		self.disabled = false

func _pressed():
	get_tree().get_root().get_node('MainNode').configSave['language'] = 'en'
	get_tree().get_root().get_node('MainNode').saveGame('cf')
	# reload the config menu for the new language
	return get_tree().get_root().get_node('MainNode').menuParser('@@ConfigMenu')


##ToggleLanguageButton_ch
extends TextureButton

func _process(delta):
	if get_tree().get_root().get_node('MainNode').configSave['language'] == 'ch':
		self.disabled = true
	else:
		self.disabled = false

func _pressed():
	get_tree().get_root().get_node('MainNode').configSave['language'] = 'ch'
	get_tree().get_root().get_node('MainNode').saveGame('cf')
	# reload the config menu for the new language
	return get_tree().get_root().get_node('MainNode').menuParser('@@ConfigMenu')

	
##SaveButton
extends TextureButton

func _process(delta):
    self.focus_mode = 0

func _pressed():
	return get_tree().get_root().get_node('MainNode').menuParser('@@SaveMenu')

##SaveGameButton
extends TextureButton

func _pressed():
	# Max of 9 save slots per page. Default of 6.
	var slot = int(self.name[-1])
	var slotsPerPage = 6
	if get_tree().get_root().get_node('MainNode').savePage == 1:
		get_tree().get_root().get_node('MainNode').saveGame(str(slot))
	else:
		get_tree().get_root().get_node('MainNode').saveGame(str(slot + slotsPerPage))
	return get_tree().get_root().get_node('MainNode').menuParser('@@SaveMenu')

##LoadButton
extends TextureButton

func _process(delta):
    self.focus_mode = 0

func _pressed():
	return get_tree().get_root().get_node('MainNode').menuParser('@@LoadMenu')
	
##LoadGameButton
extends TextureButton

func _process(delta):
    self.focus_mode = 0

func _pressed():
	# Max of 9 load slots per page. Default of 6.
	var slot = int(self.name[-1])
	var slotsPerPage = 6
	get_tree().get_root().get_node('MainNode/MainGame/OptionsLayer/MenuImage').hide()
	get_tree().get_root().get_node('MainNode').inMenu = false
	if get_tree().get_root().get_node('MainNode').savePage == 1:
		return get_tree().get_root().get_node('MainNode').loadGame(str(slot))
	else:
		return get_tree().get_root().get_node('MainNode').loadGame(str(slot + slotsPerPage))

##None
extends TextureButton

func _pressed():
	pass

##endScripts

